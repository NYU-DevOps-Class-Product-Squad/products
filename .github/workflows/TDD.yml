name: CI Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - "README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9-slim

    # Required services    
    services:
      couchdb:
        image: couchdb:latest
        ports:
          - 5984:5984
        env:
          COUCHDB_USER: admin                  
          COUCHDB_PASSWORD: pass                  
        options: >-
          --health-cmd "curl -X GET http://couchdb:5984/"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps for the build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
            
      # - name: Install libraries for PostgreSQL
      #   run: |
      #     apt-get update
      #     apt-get install -y gcc libpq-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
      - name: Linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Create the test database
        run: |
          apt-get update
          apt-get install -y curl
          curl -X PUT http://admin:pass@couchdb:5984/test

      - name: Run unit tests with nose
        run: nosetests
        env:
          #DATABASE_URI: "postgresql://postgres:postgres@postgres:5432/testdb"
          BINDING_CLOUDANT: '{"username":"admin","password":"pass","host":"couchdb","port":5984,"url":"http://admin:pass@couchdb:5984"}'

      # Uncomment the following 2 lines during hands-on lab

      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        with:
          version: "v0.1.13"         
  
